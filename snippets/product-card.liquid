{% comment %}
  Product Card Snippet
  Displays a product card with image, title, price and quick add functionality
{% endcomment %}

<div class="product-card">
  <a href="{{ product.url }}" class="product-card__link">
    <div class="product-card__image-wrapper">
      {% if product.featured_image %}
        {{ product.featured_image | image_url: width: 600 | image_tag:
          loading: 'lazy',
          class: 'product-card__image',
          alt: product.featured_image.alt | escape
        }}
      {% else %}
        {{ 'product-1' | placeholder_svg_tag: 'product-card__image placeholder' }}
      {% endif %}
    </div>

    <div class="product-card__info">
      <h3 class="product-card__title">{{ product.title }}</h3>
      
      <div class="product-card__price">
        {% if product.compare_at_price > product.price %}
          <span class="product-card__price--sale">{{ product.price | money }}</span>
          <span class="product-card__price--compare">{{ product.compare_at_price | money }}</span>
        {% else %}
          <span class="product-card__price--regular">{{ product.price | money }}</span>
        {% endif %}
      </div>
    </div>
  </a>

  {% if product.available %}
    <div class="product-card__quick-add">
      <form action="/cart/add" method="post" enctype="multipart/form-data" class="product-card__form">
        <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
        <input type="hidden" name="quantity" value="1">
        <button
          type="submit"
          class="button button--primary button--full"
          {% unless product.selected_or_first_available_variant.available %}disabled{% endunless %}
        >
          {% if product.selected_or_first_available_variant.available %}
            {{ 'products.product.add_to_cart' | t | default: 'In den Warenkorb' }}
          {% else %}
            {{ 'products.product.sold_out' | t | default: 'Ausverkauft' }}
          {% endif %}
        </button>
      </form>
    </div>
  {% else %}
    <div class="product-card__quick-add">
      <button
        type="button"
        class="button button--secondary button--full"
        disabled
      >
        {{ 'products.product.sold_out' | t | default: 'Ausverkauft' }}
      </button>
    </div>
  {% endif %}
</div>

<style>
  .product-card {
    position: relative;
    display: flex;
    flex-direction: column;
    height: 100%;
    background: var(--color-background);
    border-radius: 0.5rem;
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border: 1px solid var(--color-border);
  }

  .product-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  }

  .product-card__link {
    text-decoration: none;
    color: inherit;
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  .product-card__image-wrapper {
    position: relative;
    aspect-ratio: 1;
    overflow: hidden;
    background: var(--color-background-subdued, #f8f8f8);
  }

  .product-card__image {
    width: 100%;
    height: 100%;
    object-fit: contain;
    transition: transform 0.3s ease;
  }

  .product-card:hover .product-card__image {
    transform: scale(1.02);
  }

  .product-card__info {
    padding: 1.5rem;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .product-card__title {
    margin: 0;
    font-size: 1.125rem;
    font-weight: 500;
    line-height: 1.4;
    color: var(--color-foreground);
  }

  .product-card__price {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 1.125rem;
    margin-top: auto;
  }

  .product-card__price--sale {
    color: var(--color-accent);
    font-weight: 600;
  }

  .product-card__price--compare {
    color: var(--color-foreground-subdued);
    text-decoration: line-through;
    font-size: 1rem;
  }

  .product-card__price--regular {
    color: var(--color-foreground);
    font-weight: 600;
  }

  .product-card__quick-add {
    padding: 0 1.5rem 1.5rem;
  }

  .product-card__form {
    width: 100%;
  }

  .button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.75rem 1.5rem;
    border: none;
    border-radius: 0.25rem;
    font-size: 1rem;
    font-weight: 500;
    text-align: center;
    cursor: pointer;
    transition: all 0.2s ease;
    text-decoration: none;
  }

  .button--primary {
    background-color: var(--color-accent);
    color: var(--color-background);
  }

  .button--primary:hover {
    opacity: 0.9;
    transform: translateY(-1px);
  }

  .button--secondary {
    background-color: var(--color-background-subdued);
    color: var(--color-foreground);
    border: 1px solid var(--color-border);
  }

  .button--secondary:hover {
    background-color: var(--color-border);
  }

  .button--full {
    width: 100%;
  }

  .button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
  }

  .button:disabled:hover {
    transform: none;
  }

  @media screen and (max-width: 749px) {
    .product-card__info {
      padding: 1rem;
      gap: 0.5rem;
    }

    .product-card__quick-add {
      padding: 0 1rem 1rem;
    }

    .product-card__title {
      font-size: 1rem;
    }

    .product-card__price {
      font-size: 1rem;
    }

    .button {
      padding: 0.625rem 1rem;
      font-size: 0.875rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const quickAddForms = document.querySelectorAll('.product-card__form');
    
    quickAddForms.forEach(form => {
      form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const button = form.querySelector('button[type="submit"]');
        const originalText = button.textContent;
        
        // Update button state
        button.disabled = true;
        button.textContent = 'Wird hinzugefügt...';
        
        // Create form data
        const formData = new FormData(form);
        
        // Send AJAX request
        fetch('/cart/add.js', {
          method: 'POST',
          body: formData
        })
        .then(response => response.json())
        .then(data => {
          // Success feedback
          button.textContent = 'Hinzugefügt!';
          button.style.backgroundColor = 'var(--color-success, #28a745)';
          
          // Dispatch custom event for cart updates
          document.dispatchEvent(new CustomEvent('cart:updated', {
            detail: { item: data }
          }));
          
          // Reset button after 2 seconds
          setTimeout(() => {
            button.disabled = false;
            button.textContent = originalText;
            button.style.backgroundColor = '';
          }, 2000);
        })
        .catch(error => {
          console.error('Error adding to cart:', error);
          
          // Error feedback
          button.textContent = 'Fehler aufgetreten';
          button.style.backgroundColor = 'var(--color-error, #dc3545)';
          
          // Reset button after 2 seconds
          setTimeout(() => {
            button.disabled = false;
            button.textContent = originalText;
            button.style.backgroundColor = '';
          }, 2000);
        });
      });
    });
  });
</script> 