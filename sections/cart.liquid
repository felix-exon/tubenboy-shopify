{% comment %}
  This section is used in the cart template to render /cart page with an
  overview of the items in customer's cart.

  https://shopify.dev/docs/storefronts/themes/architecture/templates/cart
{% endcomment %}

<div class="cart" style="padding-top: {{ section.settings.padding_top }}px; padding-bottom: {{ section.settings.padding_bottom }}px;">
  <div class="cart__container">
    <div class="cart__header">
      <h1 class="cart__title">{{ 'cart.title' | t }}</h1>
    </div>

    {% if cart.item_count > 0 %}
      <form action="{{ routes.cart_url }}" method="post" class="cart__form">
        <div class="cart__items">
          {% for item in cart.items %}
            <div class="cart__item">
              <div class="cart__item-image">
                {% if item.image %}
                  <a href="{{ item.url }}">
                    {{ item.image | image_url: width: 200 | image_tag: loading: 'lazy', alt: item.title }}
                  </a>
                {% endif %}
              </div>

              <div class="cart__item-content">
                <div class="cart__item-details">
                  <h2 class="cart__item-title">
                    <a href="{{ item.url }}">{{ item.product.title }}</a>
                  </h2>

                  {% if item.product.has_only_default_variant == false %}
                    <p class="cart__item-variant">
                      {% for option in item.options_with_values %}
                        {{ option.name }}: {{ option.value }}{% unless forloop.last %}, {% endunless %}
                      {% endfor %}
                    </p>
                  {% endif %}

                  <div class="cart__item-price">
                    {{ item.final_price | money }}
                    {% if item.original_price > item.final_price %}
                      <span class="cart__item-compare-price">{{ item.original_price | money }}</span>
                    {% endif %}
                  </div>
                </div>

                <div class="cart__item-quantity">
                  <div class="cart__quantity-wrapper">
                    <button
                      type="button"
                      class="cart__quantity-button"
                      data-action="decrease"
                      aria-label="Decrease quantity"
                    >
                      <svg width="12" height="2" viewBox="0 0 12 2" fill="none">
                        <path d="M1 1H11" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                      </svg>
                    </button>
                    <input
                      type="number"
                      name="updates[]"
                      value="{{ item.quantity }}"
                      min="1"
                      class="cart__quantity-input"
                      aria-label="Quantity"
                    >
                    <button
                      type="button"
                      class="cart__quantity-button"
                      data-action="increase"
                      aria-label="Increase quantity"
                    >
                      <svg width="12" height="12" viewBox="0 0 12 12" fill="none">
                        <path d="M6 1V11M1 6H11" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                      </svg>
                    </button>
                  </div>

                  <a href="{{ item.url_to_remove }}" class="cart__item-remove">
                    {{ 'cart.remove' | t }}
                  </a>
                </div>
              </div>
            </div>
          {% endfor %}
        </div>

        <div class="cart__footer">
          <div class="cart__summary">
            <div class="cart__subtotal">
              <span>{{ 'cart.subtotal' | t }}</span>
              <span>{{ cart.total_price | money }}</span>
            </div>

            {% if cart.total_discount > 0 %}
              <div class="cart__discount">
                <span>{{ 'cart.discount' | t }}</span>
                <span>-{{ cart.total_discount | money }}</span>
              </div>
            {% endif %}

            <div class="cart__total">
              <span>{{ 'cart.total' | t }}</span>
              <span>{{ cart.total_price | money }}</span>
            </div>

            <div class="cart__buttons">
              <button type="submit" name="update" class="cart__update-button">
                {{ 'cart.update' | t }}
              </button>
              <button type="submit" name="checkout" class="cart__checkout-button">
                {{ 'cart.checkout' | t }}
              </button>
            </div>
          </div>
        </div>
      </form>
    {% else %}
      <div class="cart__empty">
        <p>{{ 'cart.empty' | t }}</p>
        <a href="{{ routes.all_products_collection_url }}" class="cart__continue-shopping">
          {{ 'cart.continue_shopping' | t }}
        </a>
      </div>
    {% endif %}
  </div>
</div>

{% schema %}
{
  "name": "t:general.cart",
  "settings": [
    {
      "type": "range",
      "id": "padding_top",
      "label": "t:labels.padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "t:labels.padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "default": 36
    }
  ]
}
{% endschema %}

{% style %}
  .cart {
    max-width: var(--page-width);
    margin: 0 auto;
    padding: 0 var(--page-margin);
  }

  .cart__header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .cart__title {
    font-size: 2rem;
    font-weight: 600;
    margin: 0;
    color: var(--color-foreground);
    position: relative;
    display: inline-block;
    padding-bottom: 0.75rem;
  }

  .cart__title::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 40px;
    height: 2px;
    background-color: var(--color-accent);
  }

  .cart__items {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    margin-bottom: 3rem;
  }

  .cart__item {
    display: grid;
    grid-template-columns: 120px 1fr;
    gap: 1.5rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid var(--color-border);
  }

  .cart__item:last-child {
    border-bottom: none;
  }

  .cart__item-image {
    width: 120px;
    height: 120px;
    border-radius: 0.5rem;
    overflow: hidden;
  }

  .cart__item-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .cart__item-content {
    display: flex;
    justify-content: space-between;
    gap: 1.5rem;
  }

  .cart__item-details {
    flex: 1;
  }

  .cart__item-title {
    font-size: 1.25rem;
    margin: 0 0 0.5rem;
  }

  .cart__item-title a {
    color: var(--color-foreground);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .cart__item-title a:hover {
    color: var(--color-accent);
  }

  .cart__item-variant {
    color: var(--color-foreground-subdued);
    margin: 0 0 0.5rem;
    font-size: 0.875rem;
  }

  .cart__item-price {
    font-weight: 600;
    color: var(--color-accent);
  }

  .cart__item-compare-price {
    color: var(--color-foreground-subdued);
    text-decoration: line-through;
    margin-left: 0.5rem;
    font-size: 0.875rem;
  }

  .cart__item-quantity {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 1rem;
  }

  .cart__quantity-wrapper {
    display: flex;
    align-items: center;
    border: 1px solid var(--color-border);
    border-radius: 0.25rem;
  }

  .cart__quantity-button {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2.5rem;
    height: 2.5rem;
    background: none;
    border: none;
    color: var(--color-foreground);
    cursor: pointer;
    transition: background-color 0.2s ease;
  }

  .cart__quantity-button:hover {
    background-color: var(--color-background-subdued);
  }

  .cart__quantity-input {
    width: 3rem;
    height: 2.5rem;
    border: none;
    text-align: center;
    font-size: 1rem;
    color: var(--color-foreground);
    background: none;
  }

  .cart__quantity-input::-webkit-inner-spin-button,
  .cart__quantity-input::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  .cart__item-remove {
    color: var(--color-foreground-subdued);
    text-decoration: none;
    font-size: 0.875rem;
    transition: color 0.2s ease;
  }

  .cart__item-remove:hover {
    color: var(--color-accent);
  }

  .cart__footer {
    background-color: var(--color-background-subdued);
    border-radius: 0.5rem;
    padding: 2rem;
  }

  .cart__summary {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .cart__subtotal,
  .cart__discount,
  .cart__total {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .cart__total {
    font-weight: 600;
    font-size: 1.25rem;
    padding-top: 1rem;
    border-top: 1px solid var(--color-border);
  }

  .cart__buttons {
    display: flex;
    gap: 1rem;
    margin-top: 2rem;
  }

  .cart__update-button,
  .cart__checkout-button {
    flex: 1;
    padding: 0.75rem 1.5rem;
    border-radius: 0.25rem;
    font-weight: 500;
    text-align: center;
    cursor: pointer;
    transition: opacity 0.2s ease;
  }

  .cart__update-button {
    background-color: var(--color-background);
    color: var(--color-foreground);
    border: 1px solid var(--color-border);
  }

  .cart__checkout-button {
    background-color: var(--color-accent);
    color: var(--color-background);
    border: none;
  }

  .cart__update-button:hover,
  .cart__checkout-button:hover {
    opacity: 0.9;
  }

  .cart__empty {
    text-align: center;
    padding: 3rem 0;
  }

  .cart__empty p {
    margin: 0 0 1.5rem;
    color: var(--color-foreground-subdued);
  }

  .cart__continue-shopping {
    display: inline-block;
    padding: 0.75rem 1.5rem;
    background-color: var(--color-accent);
    color: var(--color-background);
    text-decoration: none;
    border-radius: 0.25rem;
    font-weight: 500;
    transition: opacity 0.2s ease;
  }

  .cart__continue-shopping:hover {
    opacity: 0.9;
  }

  @media screen and (max-width: 749px) {
    .cart__header {
      margin-bottom: 2rem;
    }

    .cart__title {
      font-size: 1.5rem;
    }

    .cart__item {
      grid-template-columns: 100px 1fr;
      gap: 1rem;
    }

    .cart__item-image {
      width: 100px;
      height: 100px;
    }

    .cart__item-content {
      flex-direction: column;
      gap: 1rem;
    }

    .cart__item-quantity {
      align-items: flex-start;
    }

    .cart__buttons {
      flex-direction: column;
    }
  }
{% endstyle %}

{% javascript %}
  document.addEventListener('DOMContentLoaded', function() {
    const quantityInputs = document.querySelectorAll('.cart__quantity-input');
    const decreaseButtons = document.querySelectorAll('[data-action="decrease"]');
    const increaseButtons = document.querySelectorAll('[data-action="increase"]');

    quantityInputs.forEach((input, index) => {
      const decreaseButton = decreaseButtons[index];
      const increaseButton = increaseButtons[index];

      if (decreaseButton && increaseButton) {
        decreaseButton.addEventListener('click', () => {
          const currentValue = parseInt(input.value);
          if (currentValue > 1) {
            input.value = currentValue - 1;
          }
        });

        increaseButton.addEventListener('click', () => {
          const currentValue = parseInt(input.value);
          input.value = currentValue + 1;
        });
      }
    });
  });
{% endjavascript %}
